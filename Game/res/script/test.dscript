
/*
set const c = 3;
set const sc = 4;
set const maxIter = 1;

set dir;
set dir2;
set const dirAdd = -8;
set const dirAdd2 = 9;


while(true){
	for(d < 3)
		split({_cx, _top + 120}, dir + d*(360/c), dir2 + d*(360/c), (d -> _red, _green, _blue), 0);
	
	dir += dirAdd;
	dir2 += dirAdd2;
	
	wait 3;
}

task split(pos, dir, dir2, col, iterations){
	
	set b = bullet(_rice, col, pos, dir, 1.2, 10);
	
	if(iterations != maxIter){
		b.setSpd(6);
		b.setAccel(-0.2);
		b.setMinSpd(0);
	}
	
	wait 45;
	
	if(iterations < maxIter){
		b.delete();
		
		for(d < 0, 360/sc, 360)
			split(b.getPos(), dir2 + d, dir, col, iterations + 1);
	}
}
*/

enemy();

task enemy(){
	
	set e = enemy(_fighter, _cx, _top + 140, 100);
	e.setDir(90);
	e.setSpd(0.5);
	
	returnif e.getY() > _cy;
	
	set const c = 16;
	set dir = rand(0, 360);
	
	while(true){
		
		for(d < 0, 360/c, 360)
			bullet(_scale, _green, e.getPos() + radius(20, dir + d), dir + d, 1, 0, 3, 0.05, 8);
		
		dir += rand(10);
		
		wait 3;
	}
}